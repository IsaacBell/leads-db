name: Daily updater

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout current repository
      uses: actions/checkout@v3
      
    - name: Checkout nrd-poll repository
      uses: actions/checkout@v3
      with:
        repository: IsaacBell/nrd-poll
        token: ${{ secrets.SYNC_TOKEN }}
        path: nrd-poll
      
    - name: Debug - Check nrd-poll checkout
      run: |
        echo "Contents of $GITHUB_WORKSPACE:"
        ls -la $GITHUB_WORKSPACE
        echo "Contents of $GITHUB_WORKSPACE/nrd-poll:"
        ls -la $GITHUB_WORKSPACE/nrd-poll
        
    - name: What time is it?
      run: |
        date -u
        TZ="Europe/Paris" date
        
    - name: Set up Python 3
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: Install prerequisites
      run: |
        sudo apt -qq install fd-find
        
    - name: Prepare global variables
      run: |
        echo "ZONES_DIR=$GITHUB_WORKSPACE/data/zones" >> $GITHUB_ENV
        echo "DAILY_DIR=$GITHUB_WORKSPACE/data/daily" >> $GITHUB_ENV
        echo "SYNC_DIR=$GITHUB_WORKSPACE/nrd-poll" >> $GITHUB_ENV
        
    - name: Debug - Check SYNC_DIR path
      run: |
        echo "SYNC_DIR path:"
        echo $SYNC_DIR
        echo "Contents of SYNC_DIR:"
        ls -la $SYNC_DIR
        
    - name: Sync data
      run: |
        mkdir -p "$DAILY_DIR"
        
        if [ -f "$SYNC_DIR/today_new.gz" ]; then
          cp "$SYNC_DIR/today_new.gz" "$DAILY_DIR/today_new.gz"
          echo "today_new.gz synced successfully"
        else
          echo "Error: today_new.gz not found in the nrd-poll repository"
          exit 1
        fi
        
        if [ -f "$SYNC_DIR/yesterday_new.gz" ]; then
          cp "$SYNC_DIR/yesterday_new.gz" "$DAILY_DIR/yesterday_new.gz"
          echo "yesterday_new.gz synced successfully"
        else
          echo "Error: yesterday_new.gz not found in the nrd-poll repository"
          exit 1
        fi
        
    - name: Commit changes
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        
        git add "$DAILY_DIR/today_new.gz" "$DAILY_DIR/yesterday_new.gz"
        
        if git diff --cached --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Sync data from nrd-poll repository"
          git push
        fi
  
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_email: ${{ secrets.GCP_EMAIL }}
        service_account_key: ${{ secrets.GCP_CREDENTIALS }}
        export_default_credentials: true
    
    - name: Configure Docker
      run: |
        gcloud auth configure-docker
      
    - name: Build & Publish
      run: |
        gcloud config set project ${{ secrets.GCP_PROJECT }}
        gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT }} leads-db --timeout=9000 --machine-type=e2-medium
      
    - name: Deploy
      run: |
        gcloud run deploy leads-db --image gcr.io/${{ secrets.GCP_PROJECT }}/leads-db \
        --region=us-central1 --platform managed --allow-unauthenticated --set-secrets=ABSTRACT_API_COMPANY_ENRICHMENT_API_KEY=ABSTRACT_API_COMPANY_ENRICHMENT_API_KEY:latest,ABSTRACT_API_COMPANY_ENRICHMENT_API_URL=ABSTRACT_API_COMPANY_ENRICHMENT_API_URL:latest,ABSTRACT_API_SCRAPE_API_KEY=ABSTRACT_API_SCRAPE_API_KEY:latest,ABSTRACT_API_SCRAPE_URL=ABSTRACT_API_SCRAPE_URL:latest,PINECONE_API_KEY=PINECONE_API_KEY:latest,PULSAR_STREAMING_API_TOKEN=PULSAR_STREAMING_API_TOKEN:latest,ASTRA_DB_APPLICATION_TOKEN=ASTRA_DB_APPLICATION_TOKEN:latest,ASTRA_DB_STREAMING_URL=ASTRA_DB_STREAMING_URL:latest,ASTRA_DB_API_ENDPOINT=ASTRA_DB_API_ENDPOINT:latest,ASTRA_DB_ID=ASTRA_DB_ID:latest,ASTRA_DB_REGION=ASTRA_DB_REGION:latest,NOTION_TOKEN=NOTION_TOKEN:latest,NOTION_DB_ID=NOTION_DB_ID:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest --min-instances=0 --max-instances=2
        gcloud run services update-traffic leads-db --region=us-central1 --to-revisions LATEST=100